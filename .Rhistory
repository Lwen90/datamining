total.dic.matrix.row <- nrow(total.dic.matrix);
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
#放置所有类
all.class.length.train <- data.frame(earn=length(earn.train),acq=length(acq.train),moneyfx=length(moneyfx.train)
,grain=length(grain.train),crude=length(crude.train),trade=length(trade.train)
 ,interest=length(interest.train),ship=length(ship.train),wheat=length(wheat.train),corn=length(cron.train));
# 找到每个主题集合中，至少在一半的文档中出现的频繁项
#earn.removeSparse.dtm <- removeSparseTerms(earn.train.dtm, sparse = 0.95)
earn.train.dtm <- DocumentTermMatrix(earn.train)
earn.freqTerms.train <- findFreqTerms(earn.train.dtm,2887/3)
acq.train.dtm <- DocumentTermMatrix(acq.train)
acq.freqTerms.train <- findFreqTerms(acq.train.dtm,1650/3)
moneyfx.train.dtm <- DocumentTermMatrix(moneyfx.train)
moneyfx.freqTerms.train <- findFreqTerms(moneyfx.train.dtm,538/3)
grain.train.dtm <- DocumentTermMatrix(grain.train)
grain.freqTerms.train <- findFreqTerms(grain.train.dtm,433/3)
crude.train.dtm <- DocumentTermMatrix(crude.train)
crude.freqTerms.train <- findFreqTerms(crude.train.dtm,389/3)
trade.train.dtm <- DocumentTermMatrix(trade.train)
trade.freqTerms.train <- findFreqTerms(trade.train.dtm,369/3)
interest.train.dtm <- DocumentTermMatrix(interest.train)
interest.freqTerms.train <- findFreqTerms(interest.train.dtm,347/3)
ship.train.dtm <- DocumentTermMatrix(ship.train)
ship.freqTerms.train <- findFreqTerms(ship.train.dtm,197/3)
wheat.train.dtm <- DocumentTermMatrix(wheat.train)
wheat.freqTerms.train <- findFreqTerms(wheat.train.dtm,212/3)
cron.train.dtm <- DocumentTermMatrix(cron.train)
cron.freqTerms.train <- findFreqTerms(cron.train.dtm,181/3)
#存放最初频繁项
all.class.freqTerms.train  <- list(earn=earn.freqTerms.train,acq=acq.freqTerms.train,moneyfx=moneyfx.freqTerms.train
,grain=grain.freqTerms.train,crude=crude.freqTerms.train,trade=trade.freqTerms.train
 ,interest=interest.freqTerms.train,ship=ship.freqTerms.train,wheat=wheat.freqTerms.train,corn=cron.freqTerms.train); 
#存放最初频繁项包含项的个数
all.class.freqTerms.length.train <- data.frame(earn = length(earn.freqTerms.train),acq=length(acq.freqTerms.train),moneyfx=length(moneyfx.freqTerms.train)
,grain=length(grain.freqTerms.train),crude=length(crude.freqTerms.train),trade=length(trade.freqTerms.train)
 ,interest=length(interest.freqTerms.train),ship=length(ship.freqTerms.train),wheat=length(wheat.freqTerms.train),corn=length(cron.freqTerms.train)); 
#取频繁项并集，得到特征字典 （函数）
#removeExtraFreqTerms 
#获得特征
dic.train <- removeExtraFreqTerms(all.class.freqTerms.train)
earn.train.dic <- DocumentTermMatrix(earn.train,list(dictionary = dic.train))
acq.train.dic <- DocumentTermMatrix(acq.train,list(dictionary = dic.train))
moneyfx.train.dic <- DocumentTermMatrix(moneyfx.train,list(dictionary = dic.train))
grain.train.dic <- DocumentTermMatrix(grain.train,list(dictionary = dic.train))
crude.train.dic <- DocumentTermMatrix(crude.train,list(dictionary = dic.train))
trade.train.dic <- DocumentTermMatrix(trade.train,list(dictionary = dic.train))
interest.train.dic <- DocumentTermMatrix(interest.train,list(dictionary = dic.train))
ship.train.dic <- DocumentTermMatrix(ship.train,list(dictionary = dic.train))
wheat.train.dic <- DocumentTermMatrix(wheat.train,list(dictionary = dic.train))
cron.train.dic <- DocumentTermMatrix(cron.train,list(dictionary = dic.train))
#换为矩阵求距离
earn.train.dic.matrix <- as.matrix(earn.train.dic);
acq.train.dic.matrix <- as.matrix(acq.train.dic);
moneyfx.train.dic.matrix <- as.matrix(moneyfx.train.dic);
grain.train.dic.matrix <- as.matrix(grain.train.dic);
crude.train.dic.matrix <- as.matrix(crude.train.dic);
trade.train.dic.matrix <- as.matrix(trade.train.dic);
interest.train.dic.matrix <- as.matrix(interest.train.dic);
ship.train.dic.matrix <- as.matrix(ship.train.dic);
wheat.train.dic.matrix <- as.matrix(wheat.train.dic);
cron.train.dic.matrix <- as.matrix(cron.train.dic);
total.dic.matrix <- rbind(earn.train.dic.matrix, acq.train.dic.matrix, moneyfx.train.dic.matrix, grain.train.dic.matrix,
crude.train.dic.matrix, trade.train.dic.matrix, interest.train.dic.matrix, ship.train.dic.matrix,
wheat.train.dic.matrix, cron.train.dic.matrix)
#nummber of the document in the all training set 
total.dic.matrix.row <- nrow(total.dic.matrix);
length(dic.train)
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
#放置所有类
all.class.length.train <- data.frame(earn=length(earn.train),acq=length(acq.train),moneyfx=length(moneyfx.train)
,grain=length(grain.train),crude=length(crude.train),trade=length(trade.train)
 ,interest=length(interest.train),ship=length(ship.train),wheat=length(wheat.train),corn=length(cron.train));
# 找到每个主题集合中，至少在一半的文档中出现的频繁项
#earn.removeSparse.dtm <- removeSparseTerms(earn.train.dtm, sparse = 0.95)
earn.train.dtm <- DocumentTermMatrix(earn.train)
earn.freqTerms.train <- findFreqTerms(earn.train.dtm,2887/2)
acq.train.dtm <- DocumentTermMatrix(acq.train)
acq.freqTerms.train <- findFreqTerms(acq.train.dtm,1650/2)
moneyfx.train.dtm <- DocumentTermMatrix(moneyfx.train)
moneyfx.freqTerms.train <- findFreqTerms(moneyfx.train.dtm,538/2)
grain.train.dtm <- DocumentTermMatrix(grain.train)
grain.freqTerms.train <- findFreqTerms(grain.train.dtm,433/2)
crude.train.dtm <- DocumentTermMatrix(crude.train)
crude.freqTerms.train <- findFreqTerms(crude.train.dtm,389/2)
trade.train.dtm <- DocumentTermMatrix(trade.train)
trade.freqTerms.train <- findFreqTerms(trade.train.dtm,369/2)
interest.train.dtm <- DocumentTermMatrix(interest.train)
interest.freqTerms.train <- findFreqTerms(interest.train.dtm,347/2)
ship.train.dtm <- DocumentTermMatrix(ship.train)
ship.freqTerms.train <- findFreqTerms(ship.train.dtm,197/2)
wheat.train.dtm <- DocumentTermMatrix(wheat.train)
wheat.freqTerms.train <- findFreqTerms(wheat.train.dtm,212/2)
cron.train.dtm <- DocumentTermMatrix(cron.train)
cron.freqTerms.train <- findFreqTerms(cron.train.dtm,181/2)
#存放最初频繁项
all.class.freqTerms.train  <- list(earn=earn.freqTerms.train,acq=acq.freqTerms.train,moneyfx=moneyfx.freqTerms.train
,grain=grain.freqTerms.train,crude=crude.freqTerms.train,trade=trade.freqTerms.train
 ,interest=interest.freqTerms.train,ship=ship.freqTerms.train,wheat=wheat.freqTerms.train,corn=cron.freqTerms.train); 
#存放最初频繁项包含项的个数
all.class.freqTerms.length.train <- data.frame(earn = length(earn.freqTerms.train),acq=length(acq.freqTerms.train),moneyfx=length(moneyfx.freqTerms.train)
,grain=length(grain.freqTerms.train),crude=length(crude.freqTerms.train),trade=length(trade.freqTerms.train)
 ,interest=length(interest.freqTerms.train),ship=length(ship.freqTerms.train),wheat=length(wheat.freqTerms.train),corn=length(cron.freqTerms.train)); 
#取频繁项并集，得到特征字典 （函数）
#removeExtraFreqTerms 
#获得特征
dic.train <- removeExtraFreqTerms(all.class.freqTerms.train)
length(dic.train)
source("E:\\pro\\testKNN.R")
earn.train.dic <- DocumentTermMatrix(earn.train,list(dictionary = dic.train))
acq.train.dic <- DocumentTermMatrix(acq.train,list(dictionary = dic.train))
moneyfx.train.dic <- DocumentTermMatrix(moneyfx.train,list(dictionary = dic.train))
grain.train.dic <- DocumentTermMatrix(grain.train,list(dictionary = dic.train))
crude.train.dic <- DocumentTermMatrix(crude.train,list(dictionary = dic.train))
trade.train.dic <- DocumentTermMatrix(trade.train,list(dictionary = dic.train))
interest.train.dic <- DocumentTermMatrix(interest.train,list(dictionary = dic.train))
ship.train.dic <- DocumentTermMatrix(ship.train,list(dictionary = dic.train))
wheat.train.dic <- DocumentTermMatrix(wheat.train,list(dictionary = dic.train))
cron.train.dic <- DocumentTermMatrix(cron.train,list(dictionary = dic.train))
#换为矩阵求距离
earn.train.dic.matrix <- as.matrix(earn.train.dic);
acq.train.dic.matrix <- as.matrix(acq.train.dic);
moneyfx.train.dic.matrix <- as.matrix(moneyfx.train.dic);
grain.train.dic.matrix <- as.matrix(grain.train.dic);
crude.train.dic.matrix <- as.matrix(crude.train.dic);
trade.train.dic.matrix <- as.matrix(trade.train.dic);
interest.train.dic.matrix <- as.matrix(interest.train.dic);
ship.train.dic.matrix <- as.matrix(ship.train.dic);
wheat.train.dic.matrix <- as.matrix(wheat.train.dic);
cron.train.dic.matrix <- as.matrix(cron.train.dic);
total.dic.matrix <- rbind(earn.train.dic.matrix, acq.train.dic.matrix, moneyfx.train.dic.matrix, grain.train.dic.matrix,
crude.train.dic.matrix, trade.train.dic.matrix, interest.train.dic.matrix, ship.train.dic.matrix,
wheat.train.dic.matrix, cron.train.dic.matrix)
#nummber of the document in the all training set 
total.dic.matrix.row <- nrow(total.dic.matrix);
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
cls.1 <- disKNN( cron.train.dic.matrix[1,],total.dic.matrix, total.dic.matrix.row)
dist.zero <- index[cls.1 == 0]
dist.zero
order(cls.1)
order(cls.1)[1:5]
index[7013]
index[7013] %in% dist.zero
cls.1 <- disKNN( acq.train.dic.matrix[1,],total.dic.matrix, total.dic.matrix.row)
order(cls.1)[1:5]
cls.1 <- disKNN( earn.train.dic.matrix[1,],total.dic.matrix, total.dic.matrix.row)
dist.zero <- index[cls.1 == 0]
dist.zero
cls.1[2878]
cls.1
cls.1
index[1] %in% dist.zero
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\judgeKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
source("E:\\pro\\testKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
length(dic.train)
cls.1 <- disKNN( cron.train.dic.matrix[18,],total.dic.matrix, total.dic.matrix.row)
dic.zero <- index[cls.1 == 0]
dic.zero
cls.1 <- disKNN( total.dic.matrix[18,],total.dic.matrix, total.dic.matrix.row)
dic.zero <- index[cls.1 == 0]
dic.zero
cls.1 <- disKNN( total.dic.matrix[,],total.dic.matrix, total.dic.matrix.row)
source("E:\\pro\\judgeKNN.R")
testKNN( total.dic.matrix,total.dic.matrix, total.dic.matrix.row, all.class.length.train, all.class.name.train)
earn.test <- testSet[topicFilter(testSet, 'earn', TRUE)]
acq.test <- testSet[topicFilter(testSet, 'acq', TRUE)]
moneyfx.test <- testSet[topicFilter(testSet, 'money-fx', TRUE)]
grain.test <- testSet[topicFilter(testSet, 'grain', TRUE)]
crude.test <- testSet[topicFilter(testSet, 'crude', TRUE)]
trade.test <- testSet[topicFilter(testSet, 'trade', TRUE)]
interest.test <- testSet[topicFilter(testSet, 'interest', TRUE)]
ship.test <- testSet[topicFilter(testSet, 'ship', TRUE)]
wheat.test <- testSet[topicFilter(testSet, 'wheat', TRUE)]
cron.test <- testSet[topicFilter(testSet, 'corn', TRUE)]
#放置所有测试类个数
all.class.length.test <- data.frame(earn=length(earn.test),acq=length(acq.test),moneyfx=length(moneyfx.test)
,grain=length(grain.test),crude=length(crude.test),trade=length(trade.test)
 ,interest=length(interest.test),ship=length(ship.test),wheat=length(wheat.test),corn=length(cron.test));
all.class.length.test 
earn.test.dic <- DocumentTermMatrix(earn.test,list(dictionary = dic.train))
acq.test.dic <- DocumentTermMatrix(acq.test,list(dictionary = dic.train))
moneyfx.test.dic <- DocumentTermMatrix(moneyfx.test,list(dictionary = dic.train))
grain.test.dic <- DocumentTermMatrix(grain.test,list(dictionary = dic.train))
crude.test.dic <- DocumentTermMatrix(crude.test,list(dictionary = dic.train))
trade.test.dic <- DocumentTermMatrix(trade.test,list(dictionary = dic.train))
interest.test.dic <- DocumentTermMatrix(interest.test,list(dictionary = dic.train))
ship.test.dic <- DocumentTermMatrix(ship.test,list(dictionary = dic.train))
wheat.test.dic <- DocumentTermMatrix(wheat.test,list(dictionary = dic.train))
cron.test.dic <- DocumentTermMatrix(cron.test,list(dictionary = dic.train))
earn.test.dic.matrix <- as.matrix(earn.test.dic);
acq.test.dic.matrix <- as.matrix(acq.test.dic);
moneyfx.test.dic.matrix <- as.matrix(moneyfx.test.dic);
grain.test.dic.matrix <- as.matrix(grain.test.dic);
crude.test.dic.matrix <- as.matrix(crude.test.dic);
trade.test.dic.matrix <- as.matrix(trade.test.dic);
interest.test.dic.matrix <- as.matrix(interest.test.dic);
ship.test.dic.matrix <- as.matrix(ship.test.dic);
wheat.test.dic.matrix <- as.matrix(wheat.test.dic);
cron.test.dic.matrix <- as.matrix(cron.test.dic);
total.dic.test.matrix <- rbind(earn.test.dic.matrix, acq.test.dic.matrix, moneyfx.test.dic.matrix, grain.test.dic.matrix,
crude.test.dic.matrix, trade.test.dic.matrix, interest.test.dic.matrix, ship.test.dic.matrix,
wheat.test.dic.matrix, cron.test.dic.matrix)
#nummber of the document in the all training set 
total.dic.test.matrix.row <- nrow(total.dic.test.matrix);
testKNN( total.dic.test.matrix,total.dic.test.matrix, total.dic.test.matrix.row, all.class.length.test, all.class.name.train)
save.image("E:\\pro\\.RData")
body <- strsplit(cron.train[[3]]," ")
body
source("E:\\pro\\nbGetEachClassTotalNum.R")
all.class.list.num <- getEachClassTotalNum()
all.class.list.num <- nbGetEachClassTotalNum()
 all.class.list.num
earn.train.dtm.different.word <- length(findFreqTerms(earn.train.dtm,1));
acq.train.dtm.different.word <- length(findFreqTerms(acq.train.dtm,1));
moneyfx.train.dtm.different.word <- length(findFreqTerms(moneyfx.train.dtm,1));
grain.train.dtm.different.word <- length(findFreqTerms(grain.train.dtm,1));
crude.train.dtm.different.word <- length(findFreqTerms(crude.train.dtm,1));
trade.train.dtm.different.word <- length(findFreqTerms(trade.train.dtm,1));
interest.train.dtm.different.word <- length(findFreqTerms(interest.train.dtm,1));
ship.train.dtm.different.word <- length(findFreqTerms(ship.train.dtm,1));
wheat.train.dtm.different.word <- length(findFreqTerms(wheat.train.dtm,1));
cron.train.dtm.different.word <- length(findFreqTerms(cron.train.dtm,1));
all.class.list.pro <- pro(all.class.length.train);
all.class.list.pro <- nbGetEachClassPro(all.class.length.train);
source("E:\\pro\\nbGetEachClassPro.R")
all.class.list.pro <- nbGetEachClassPro(all.class.length.train);
 all.class.list.pro
 all.class.list.pro
test.dic <- DocumentTermMatrix(earn.train[1,],list(dictionary = dic.train))
test.dic <- DocumentTermMatrix(earn.train[1],list(dictionary = dic.train))
test.dic
test.matrix <- as.matrix(test.dic);
test.feature <- feature[test.matrix == 0];
test.feature <- dic.train[test.matrix == 0];
test.feature
test.feature[]
test.feature[1]
test.feature[2]
length(test.feature)
dic <-test.feature[1]
dic
name <- paste(all.class.name.train[1],".train",sep = "");
name
corp <- get(name);
dtm.sub <- DocumentTermMatrix(corp,list(dictionary = dic));
dit.sub
dtm.sub
sum(dtm.sub)
dtm.sub <- as.matrix(dtm.sub);
sum(dtm.sub)+1)
sum(dtm.sub)+1
source("E:\\pro\\nbCalClassPro.R")
source("E:\\pro\\nbGetEachClassPro.R")
source("E:\\pro\\nbGetEachClassTotalNum.R")
source("E:\\pro\\nbTrain.R")
source("E:\\pro\\nbTrain.R")
nbTrain(earn.train[1], dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbCalClassPro.R")
source("E:\\pro\\nbCalClassPro.R")
nbTrain(earn.train[1], dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbTrain.R")
nbTrain(earn.train[1], dic.train, all.class.name.train, all.class.list.num);
nbTrain(cron.train[1], dic.train, all.class.name.train, all.class.list.num);
earn.train.dic
earn.train.dic
dic.train
earn.train.dic["also"]
earn.train.dic$also
earn.train.dic.matrix
earn.train.dic.matrix["also"]
earn.train.dic.matrix[,"also"]
source("E:\\pro\\nbCalClassPro.R")
nbTrain(earn.train[1], dic.train, all.class.name.train, all.class.list.num);
which.max(nbTrain(earn.train[1], dic.train, all.class.name.train, all.class.list.num);
which.max(nbTrain(earn.train[1], dic.train, all.class.name.train, all.class.list.num));
meta(cron.train[[1]])
attributes(cron.train[[1]])
attributes(cron.train[[1]])$Topics
attributes(cron.train[[1]],"LocalMetaData")$Topics
attr(cron.train[[1]],"LocalMetaData")$Topics
length(cron.train)
source("E:\\pro\\nbGetClass.R")
source("E:\\pro\\nbGetClass.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbGetClass.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbGetClass.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
earn.train[[1]]
earn.train[1]
source("E:\\pro\\nbGetClass.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbCalClassPro.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbTrain.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbGetClass.R")
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(cron.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbGetClass.R")
nbGetClass(cron.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(acq.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(moneyfx.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(grain.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(crude.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(trade.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(interest.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(ship.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(wheat.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbGetClass.R")
nbGetClass(wheat.train, dic.train, all.class.name.train, all.class.list.num);
source("E:\\pro\\nbGetClass.R")
nbGetClass(wheat.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(cron.train, dic.train, all.class.name.train, all.class.list.num);
nbGetClass(earn.train, dic.train, all.class.name.train, all.class.list.num);
cls.1 
cls.2
cls.3
cls.4
cls.5
cls.1 <- matrix(1:8, nrow = 2)
cls.1
sum(cls.1)
source("E:\\pro\\nbCalClassPro.R")
nbGetClass(cron.train, dic.train, all.class.name.train, all.class.list.num);
chooseCRANmirror()
utils:::menuInstallPkgs()
library(e1071)
naiveBayes
?naiveBayes
earn.df.train <- as.data.frame(inspect(earn.train.dic))
earn.type <- rep(1,2877)
earn.df.train$type <- earn.type
acq.df.train <- as.data.frame(inspect(acq.train.dic))
acq.type <- rep(2,1650)
acq.df.train$type <- acq.type
moneyfx.df.train <- as.data.frame(inspect(moneyfx.train.dic))
moneyfx.type <- rep(3,538)
moneyfx.df.train$type <- moneyfx.type
grain.df.train <- as.data.frame(inspect(grain.train.dic))
grain.type <- rep(4,433)
grain.df.train$type <- grain.type
crude.df.train <- as.data.frame(inspect(crude.train.dic))
crude.type <- rep(5,389)
crude.df.train$type <- crude.type
trade.df.train <- as.data.frame(inspect(trade.train.dic))
trade.type <- rep(6,369)
trade.df.train$type <- trade.type
interest.df.train <- as.data.frame(inspect(interest.train.dic))
interest.type <- rep(7,347)
interest.df.train$type <- interest.type
ship.df.train <- as.data.frame(inspect(ship.train.dic))
ship.type <- rep(8,197)
ship.df.train$type <- ship.type
wheat.df.train <- as.data.frame(inspect(wheat.train.dic))
wheat.type <- rep(9,212)
wheat.df.train$type <- wheat.type
cron.df.train <- as.data.frame(inspect(cron.train.dic))
cron.type <- rep(10,181)
cron.df.train$type <- cron.type
total.df.matrix <- rbind(earn.df.train, acq.df.train, moneyfx.df.train, grain.df.train,
crude.df.train, trade.df.train, interest.df.train, ship.df.train,
wheat.df.train, cron.df.train)
dim(total.df.matrix)
dim(total.df.matrix)
model.train <- naiveBayes(type ~ ., data = total.df.matrix) 
dim(model.train)
model.train
predict(model.train, total.df.tain[1:10,])
predict(model.train, total.df.train[1:10,])
total.df.train <- rbind(earn.df.train, acq.df.train, moneyfx.df.train, grain.df.train,
crude.df.train, trade.df.train, interest.df.train, ship.df.train,
wheat.df.train, cron.df.train)
predict(model.train, total.df.train[1:10,])
predict(model.train, total.df.train[6500,])
pred <- predict(model.train, total.df.train)
table(pred,total.df.train$type)
pred 
attributes(pred)
save.image("E:\\pro\\.RData")
total.df.train[77]
model.train <- naiveBayes(total.df.train[,-77], total.df.train[,77]) 
predict(model.train, total.df.train)
table(predict(model.train, total.df.train),total.df.train[,77])
model.train
predict(model.train, total.df.train[1,])
total.df.train.subset <- Subset(total.df.train, slect = - type)
total.df.train.subset <- subset(total.df.train, slect = - type)
dim(total.df.train.subset)
attributes(total.df.train.subset)
total.df.train.subset <- subset(total.df.train, select = - type)
dim(total.df.train.subset)
total.df.train.x <- subset(total.df.train, select = - type)
total.df.train.y <- total.df.train$type
total.df.train.y
model.svm <- svm(total.df.train.x, total.df.train.y);
model.svm
pred.svm <- predict(model.svm, total.df.train.x)
pred.svm
table(pred,total.df.train.y);
table(pred,total.df.train.y)
dim(pred)
length(pred)
pred[1]
pred[2]
pred[[1]]
attributes(pred)
pred$class
pred
dim(pred.svm)
attributed(pred.svm)
attributes(pred.svm)
pred[1]
pred.svm[1]
pred.svm[7192]
pred.svm[6192]
pred.svm[6892]
pred.svm[7092]
table(pred.svm,total.df.train.y)
pred.svm <- predict(model.svm, total.df.train.x[7100,])
table(pred.svm, total.df.train.y)
pred.svm
# 找到每个主题集合中，至少在一半的文档中出现的频繁项
#earn.removeSparse.dtm <- removeSparseTerms(earn.train.dtm, sparse = 0.95)
earn.train.dtm <- DocumentTermMatrix(earn.train)
earn.freqTerms.train <- findFreqTerms(earn.train.dtm,2887/3)
acq.train.dtm <- DocumentTermMatrix(acq.train)
acq.freqTerms.train <- findFreqTerms(acq.train.dtm,1650/3)
moneyfx.train.dtm <- DocumentTermMatrix(moneyfx.train)
moneyfx.freqTerms.train <- findFreqTerms(moneyfx.train.dtm,538/3)
grain.train.dtm <- DocumentTermMatrix(grain.train)
grain.freqTerms.train <- findFreqTerms(grain.train.dtm,433/3)
crude.train.dtm <- DocumentTermMatrix(crude.train)
crude.freqTerms.train <- findFreqTerms(crude.train.dtm,389/3)
trade.train.dtm <- DocumentTermMatrix(trade.train)
trade.freqTerms.train <- findFreqTerms(trade.train.dtm,369/3)
interest.train.dtm <- DocumentTermMatrix(interest.train)
interest.freqTerms.train <- findFreqTerms(interest.train.dtm,347/3)
ship.train.dtm <- DocumentTermMatrix(ship.train)
ship.freqTerms.train <- findFreqTerms(ship.train.dtm,197/3)
wheat.train.dtm <- DocumentTermMatrix(wheat.train)
wheat.freqTerms.train <- findFreqTerms(wheat.train.dtm,212/3)
cron.train.dtm <- DocumentTermMatrix(cron.train)
cron.freqTerms.train <- findFreqTerms(cron.train.dtm,181/3)
#存放最初频繁项
all.class.freqTerms.train  <- list(earn=earn.freqTerms.train,acq=acq.freqTerms.train,moneyfx=moneyfx.freqTerms.train
,grain=grain.freqTerms.train,crude=crude.freqTerms.train,trade=trade.freqTerms.train
 ,interest=interest.freqTerms.train,ship=ship.freqTerms.train,wheat=wheat.freqTerms.train,corn=cron.freqTerms.train); 
#存放最初频繁项包含项的个数
all.class.freqTerms.length.train <- data.frame(earn = length(earn.freqTerms.train),acq=length(acq.freqTerms.train),moneyfx=length(moneyfx.freqTerms.train)
,grain=length(grain.freqTerms.train),crude=length(crude.freqTerms.train),trade=length(trade.freqTerms.train)
 ,interest=length(interest.freqTerms.train),ship=length(ship.freqTerms.train),wheat=length(wheat.freqTerms.train),corn=length(cron.freqTerms.train)); 
#取频繁项并集，得到特征字典 （函数）
#removeExtraFreqTerms 
#获得特征
取每个文档出现一半的高频词汇作为特征 --76个
dic.train <- removeExtraFreqTerms(all.class.freqTerms.train)
length(dic.train)
earn.train.dic <- DocumentTermMatrix(earn.train,list(dictionary = dic.train))
acq.train.dic <- DocumentTermMatrix(acq.train,list(dictionary = dic.train))
moneyfx.train.dic <- DocumentTermMatrix(moneyfx.train,list(dictionary = dic.train))
grain.train.dic <- DocumentTermMatrix(grain.train,list(dictionary = dic.train))
crude.train.dic <- DocumentTermMatrix(crude.train,list(dictionary = dic.train))
trade.train.dic <- DocumentTermMatrix(trade.train,list(dictionary = dic.train))
interest.train.dic <- DocumentTermMatrix(interest.train,list(dictionary = dic.train))
ship.train.dic <- DocumentTermMatrix(ship.train,list(dictionary = dic.train))
wheat.train.dic <- DocumentTermMatrix(wheat.train,list(dictionary = dic.train))
cron.train.dic <- DocumentTermMatrix(cron.train,list(dictionary = dic.train))
nbGetClass(wheat.train, dic.train, all.class.name.train, all.class.list.num);
earn.train.dic.matrix <- as.matrix(earn.train.dic);
acq.train.dic.matrix <- as.matrix(acq.train.dic);
moneyfx.train.dic.matrix <- as.matrix(moneyfx.train.dic);
grain.train.dic.matrix <- as.matrix(grain.train.dic);
crude.train.dic.matrix <- as.matrix(crude.train.dic);
trade.train.dic.matrix <- as.matrix(trade.train.dic);
interest.train.dic.matrix <- as.matrix(interest.train.dic);
ship.train.dic.matrix <- as.matrix(ship.train.dic);
wheat.train.dic.matrix <- as.matrix(wheat.train.dic);
cron.train.dic.matrix <- as.matrix(cron.train.dic);
nbGetClass(wheat.train, dic.train, all.class.name.train, all.class.list.num);
train.kmeans <- kmeans(total.tf.train.x,10)
train.kmeans <- kmeans(total.df.train.x,10)
train.keans
train.kmeans
train.hc <- hclust(total.df.train[,-77])
train.hc <- hclust(total.df.train.x)
plotcluster(na.omit(total.df.train.x), train.kmeans$cluster)
plot(total.df.train.x[dic.trian[1:2]],col = train.kmeans$cluster)
plot(total.df.train.x[dic.train[1:2]],col = train.kmeans$cluster)
total.df.train.x
attributes(total.df.train.x)
plot(total.df.train.x[c("agricultur", "also")],col = train.kmeans$cluster)
plot(total.df.train.x[c("agricultur", "also","bank")],col = train.kmeans$cluster)
plot(total.df.train.x[c("also","bank")],col = train.kmeans$cluster)
points(train.kmeans$centers[,c("also","bank")],col = 1:3, pch= 8,cex=2)
q()
